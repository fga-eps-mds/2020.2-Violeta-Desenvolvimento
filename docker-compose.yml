version: '3'

networks:
  services:
    driver: bridge

services:
  db: 
    image: postgres
    container_name: postgres_db_${ENV}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - services
    ports:
      - "${DB_PORT}:5432"

  frontend:
    container_name: frontend_${ENV}
    build: ./frontend
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
    ports:
      - '${FRONTEND_PORT}:3000'
    networks:
      - services
    environment:
      - NODE_ENV=${NODE_ENV}
      - REACT_APP_ENV=${NODE_ENV}

  questionario:
    build: ./questionario
    container_name: questionario_${ENV}
    command: ash docker-entrypoint.sh
    volumes:
      - ./questionario:/questionario
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres_db_${ENV}
      DB_PORT: ${POSTGRES_PORT}
    ports:
      - "${QUESTIONARIO_PORT}:8001"
    networks:
      - services
    depends_on:
      - db
      - frontend

  frases:
    build: ./frases
    container_name: frases_${ENV}
    command: ash docker-entrypoint.sh
    volumes:
      - ./frases:/frases
    ports:
      - "${FRASES_PORT}:8002"
    networks:
      - services
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres_db_${ENV}
      DB_PORT: ${POSTGRES_PORT}

    depends_on:
      - db
      - frontend

  depoimentos:
    build: ./depoimentos
    container_name: depoimentos_${ENV}
    command: ash docker-entrypoint.sh
    volumes:
      - ./depoimentos:/depoimentos
    ports:
      - "${DEPOIMENTOS_PORT}:8003"
    networks:
      - services
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres_db_${ENV}
      DB_PORT: ${POSTGRES_PORT}
    depends_on:
      - db
      - frontend

  autenticador:
    build: ./autenticador
    container_name: autenticador_${ENV}
    command: ash docker-entrypoint.sh
    volumes:
      - ./autenticador:/autenticador
    ports:
      - "${AUTENTICADOR_PORT}:8004"
    networks:
      - services
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres_db_${ENV}
      DB_PORT: ${POSTGRES_PORT}
    depends_on:
      - db
      - frontend
        #  nginx:
        #    image: nginx:1.15-alpine
        #    container_name: nginx_violeta
        #    ports:
        #      - "80:80"
        #      #- "443:443"
        #    restart: unless-stopped
        #    networks:
        #      - services
        #    environment:
        #      NAME_SPACE: ${NAME_SPACE}
        #    volumes:
        #      - ./configs/nginx.conf:/etc/nginx/nginx.conf
        #      # - /etc/letsencrypt:/etc/letsencrypt
        #    links:
        #      - "questionario"
        #      - "frontend"
        #      - "frases"
        #      - "depoimentos"
        #      - "autenticador"
